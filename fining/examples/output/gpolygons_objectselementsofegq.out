gap> 
gap> #objects/elements of EGQ
gap> g := ElementaryAbelianGroup(27);
<pc group of size 27 with 3 generators>
gap> flist1 := [ Group(g.1), Group(g.2), Group(g.3), Group(g.1*g.2*g.3) ];;
gap> flist2 := [ Group([g.1, g.2^2*g.3]), Group([g.2, g.1^2*g.3 ]),
>             Group([g.3, g.1^2*g.2]), Group([g.1^2*g.2, g.1^2*g.3 ]) ];;
gap> egq := EGQByKantorFamily(g, flist1, flist2);
<EGQ of order [ 3, 3 ] and basepoint 0>
gap> h := Random(g);
f1*f2^2
gap> p := ObjectToElement(egq,h);
<a point of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>
gap> coset := RightCoset(flist1[1],h);
RightCoset(Group( [ f1 ] ),f1*f2^2)
gap> l := ObjectToElement(egq,coset);
<a line of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>
gap> p * l;
true
gap> S := flist2[2];
<pc group of size 9 with 2 generators>
gap> m := ObjectToElement(egq,S);
<a line of class 2 of <EGQ of order [ 3, 3 ] and basepoint 0>>
gap> q := BasePointOfEGQ(egq);
<a point of class 3 of <EGQ of order [ 3, 3 ] and basepoint 0>>
gap> m * q;
true
gap> lines := List(Lines(p));
[ <a line of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a line of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a line of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a line of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>> ]
gap> pts1 := List(Points(m));
[ <a point of class 2 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a point of class 2 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a point of class 2 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a point of class 3 of <EGQ of order [ 3, 3 ] and basepoint 0>> ]
gap> pts2 := List(Points(l));
[ <a point of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a point of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a point of class 1 of <EGQ of order [ 3, 3 ] and basepoint 0>>, 
  <a point of class 2 of <EGQ of order [ 3, 3 ] and basepoint 0>> ]
gap> List(pts2,x->UnderlyingObject(x));
[ f2^2, f1*f2^2, f1^2*f2^2, RightCoset(Group( [ f1, f2^2*f3 ] ),f3^2) ]
gap> UnderlyingObject(q);
0
gap> quit;
