gap> 
gap> # aslist example
gap> ps := ParabolicQuadric(6,2);
Q(6, 2)
gap> lines := AsList(Lines(ps));
<closed orbit, 315 points>
gap> time;
58
gap> List(lines);
[ <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)> ]
gap> time;
1
gap> quit;
