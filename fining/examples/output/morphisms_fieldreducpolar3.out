gap> 
gap> # field reduction zoals het door God bedoeld is.
gap> ps1 := SymplecticSpace(1,5^3);
W(1, 125)
gap> ps2 := SymplecticSpace(5,5);
W(5, 5)
gap> em := NaturalEmbeddingByFieldReduction(ps1,ps2);
#I  These polar spaces are suitable for field reduction
<geometry morphism from <Elements of W(1, 125)> to <Elements of W(5, 5)>>
gap> pts := Points(ps1);
<points of W(1, 125)>
gap> spread := List(pts,x->x^em);;
gap> test := Union(List(spread,x->List(Points(x))));;
gap> Set(test)=Set(AsList(Points(ps2)));
true
gap> hom := Intertwiner(em);
MappingByFunction( PSp(2,125), <projective collineation group of size 
976500 with 2 generators>, function( m ) ... end, function( m ) ... end )
gap> group := IsometryGroup(ps1);
PSp(2,125)
gap> Order(group);
976500
gap> gens := List(GeneratorsOfGroup(group),x->x^hom);
[ < a collineation: <cmat 6x6 over GF(5,1)>, F^0>, 
  < a collineation: <cmat 6x6 over GF(5,1)>, F^0> ]
gap> group2 := Range(hom);
<projective collineation group of size 976500 with 2 generators>
gap> Order(group2);
976500
gap> biggroup := CollineationGroup(ps2);
PGammaSp(6,5)
gap> stab := FiningSetwiseStabiliser(biggroup,spread);
#I  Computing adjusted stabilizer chain...
<projective collineation group with 7 generators>
gap> time;
6907
gap> Order(stab);
5859000
gap> ps1 := HermitianPolarSpace(2,7^2);
H(2, 7^2)
gap> ps2 := EllipticQuadric(5,7);
Q-(5, 7)
gap> em := NaturalEmbeddingByFieldReduction(ps1,ps2);
#I  These polar spaces are suitable for field reduction
<geometry morphism from <Elements of H(2, 7^2)> to <Elements of Q-(5, 7)>>
gap> pts := Points(ps1);
<points of H(2, 7^2)>
gap> spread := List(pts,x->x^em);;
gap> test := Union(List(spread,x->List(Points(x))));;
gap> Set(test)=Set(AsList(Points(ps2)));
true
gap> hom := Intertwiner(em);
MappingByFunction( PGU(3,7^2), <projective collineation group of size 
5663616 with 2 generators>, function( m ) ... end, function( m ) ... end )
gap> group := IsometryGroup(ps1);
PGU(3,7^2)
gap> Order(group);
5663616
gap> gens := List(GeneratorsOfGroup(group),x->x^hom);
[ < a collineation: <cmat 6x6 over GF(7,1)>, F^0>, 
  < a collineation: <cmat 6x6 over GF(7,1)>, F^0> ]
gap> group2 := Range(hom);
<projective collineation group of size 5663616 with 2 generators>
gap> Order(group2);
5663616
gap> biggroup := CollineationGroup(ps2);
PDeltaO-(6,7)
gap> stab := FiningSetwiseStabiliser(biggroup,spread);
#I  Computing adjusted stabilizer chain...
<projective collineation group with 10 generators>
gap> time;
3438
gap> Order(stab);
90617856
gap> quit;
