gap> 
gap> #commuting polarities
gap> mat := [[0,1,0,0],[1,0,0,0],[0,0,0,1],[0,0,1,0]]*Z(5)^0;
[ [ 0*Z(5), Z(5)^0, 0*Z(5), 0*Z(5) ], [ Z(5)^0, 0*Z(5), 0*Z(5), 0*Z(5) ], 
  [ 0*Z(5), 0*Z(5), 0*Z(5), Z(5)^0 ], [ 0*Z(5), 0*Z(5), Z(5)^0, 0*Z(5) ] ]
gap> phi := HermitianPolarityOfProjectiveSpace(mat,GF(25));
<polarity of PG(3, GF(5^2)) >
gap> mat2 := IdentityMat(4,GF(5));
[ [ Z(5)^0, 0*Z(5), 0*Z(5), 0*Z(5) ], [ 0*Z(5), Z(5)^0, 0*Z(5), 0*Z(5) ], 
  [ 0*Z(5), 0*Z(5), Z(5)^0, 0*Z(5) ], [ 0*Z(5), 0*Z(5), 0*Z(5), Z(5)^0 ] ]
gap> psi := PolarityOfProjectiveSpace(mat2,GF(25));
<polarity of PG(3, GF(5^2)) >
gap> phi*psi = psi*phi;
true
gap> g := CorrelationCollineationGroup(PG(3,25));
The FinInG correlation-collineation group PGammaL(4,25) : 2
gap> h := CollineationGroup(PG(3,25));
The FinInG collineation group PGammaL(4,25)
gap> hom := Embedding(h,g);
MappingByFunction( The FinInG collineation group PGammaL(4,25), The FinInG cor\
relation-collineation group PGammaL(4,25) : 2, function( y ) ... end )
gap> coll := PreImagesRepresentative(hom,phi*psi);
< a collineation: <cmat 4x4 over GF(5,2)>, F^5>
gap> quit;
