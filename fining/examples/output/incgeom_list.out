gap> 
gap> # list (easy examples)
gap> pg := PG(2,2);
ProjectiveSpace(2, 2)
gap> List(Points(pg));
[ <a point in ProjectiveSpace(2, 2)>, <a point in ProjectiveSpace(2, 2)>, 
  <a point in ProjectiveSpace(2, 2)>, <a point in ProjectiveSpace(2, 2)>, 
  <a point in ProjectiveSpace(2, 2)>, <a point in ProjectiveSpace(2, 2)>, 
  <a point in ProjectiveSpace(2, 2)> ]
gap> List(Lines(pg));
[ <a line in ProjectiveSpace(2, 2)>, <a line in ProjectiveSpace(2, 2)>, 
  <a line in ProjectiveSpace(2, 2)>, <a line in ProjectiveSpace(2, 2)>, 
  <a line in ProjectiveSpace(2, 2)>, <a line in ProjectiveSpace(2, 2)>, 
  <a line in ProjectiveSpace(2, 2)> ]
gap> ps := ParabolicQuadric(6,2);
Q(6, 2)
gap> lines := List(Lines(ps));
[ <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)>, 
  <a line in Q(6, 2)>, <a line in Q(6, 2)>, <a line in Q(6, 2)> ]
gap> time;
3661
gap> Size(lines);
315
gap> quit;
