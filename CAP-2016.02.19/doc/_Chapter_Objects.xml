<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Objects">
<Heading>Objects</Heading>

Any GAP object which is IsCapCategoryObject can be added to a category
and then becomes an object in this category.
Any object can belong to one or no category.
After a GAP object is added to the category, it knows which things can be
computed in its category and to which category it belongs.
It knows categorial properties and attributes, and the functions for existential quantifiers
can be applied to the object.
<Section Label="Chapter_Objects_Section_Attributes_for_the_Type_of_Objects">
<Heading>Attributes for the Type of Objects</Heading>

<ManSection>
  <Attr Arg="a" Name="CapCategory" Label="for IsCapCategoryObject"/>
 <Returns>a category
</Returns>
 <Description>
The argument is an object <Math>a</Math>.
The output is the category <Math>\mathbf{C}</Math>
to which <Math>a</Math> was added.
 </Description>
</ManSection>


</Section>



<Section Label="Chapter_Objects_Section_Equality_for_Objects">
<Heading>Equality for Objects</Heading>

<ManSection>
  <Oper Arg="a,b" Name="IsEqualForObjects" Label="for IsCapCategoryObject, IsCapCategoryObject"/>
 <Returns>a boolean
</Returns>
 <Description>
The arguments are two objects <Math>a</Math> and <Math>b</Math>.
The output is <C>true</C> if <Math>a = b</Math>,
otherwise the output is <C>false</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="C, F" Name="AddIsEqualForObjects" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsEqualForObjects</C>.
<Math>F: (a,b) \mapsto \mathtt{IsEqualForObjects}(a,b)</Math>.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Objects_Section_Categorical_Properties_of_Objects">
<Heading>Categorical Properties of Objects</Heading>

<ManSection>
  <Oper Arg="C, F" Name="AddIsProjective" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsProjective</C>.
<Math>F: a \mapsto \mathtt{IsProjective}(a)</Math>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="C, F" Name="AddIsInjective" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsInjective</C>.
<Math>F: a \mapsto \mathtt{IsInjective}(a)</Math>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="C, F" Name="AddIsTerminal" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsTerminal</C>.
<Math>F: a \mapsto \mathtt{IsTerminal}(a)</Math>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="C, F" Name="AddIsInitial" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsInitial</C>.
<Math>F: a \mapsto \mathtt{IsInitial}(a)</Math>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="a" Name="IsZeroForObjects" Label="for IsCapCategoryObject"/>
 <Returns>a boolean
</Returns>
 <Description>
The argument is an object <Math>a</Math> of a category <Math>\mathbf{C}</Math>.
The output is <C>true</C> if <Math>a</Math> is isomorphic to the zero object of <Math>\mathbf{C}</Math>,
otherwise the output is <C>false</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="C, F" Name="AddIsZeroForObjects" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsZeroForObjects</C>.
<Math>F: a \mapsto \mathtt{IsZeroForObjects}(a)</Math>.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Objects_Section_Tool_functions_for_caches">
<Heading>Tool functions for caches</Heading>

<ManSection>
  <Oper Arg="phi, psi" Name="IsEqualForCacheForObjects" Label="for IsCapCategoryObject, IsCapCategoryObject"/>
 <Returns>true or false
</Returns>
 <Description>
Compares two objects in the cache
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="c,F" Name="AddIsEqualForCacheForObjects" Label="for IsCapCategory, IsFunction"/>
 <Returns>northing
</Returns>
 <Description>
By default, CAP uses caches to store the values of Categorical operations.
To get a value out of the cache, one needs to compare the input of a basic operation
with its previous input. To compare objects in the category, IsEqualForCacheForObject is
used. By default this is an alias for IsEqualForObjects, where fail is substituted by false.
If you add a function, this function
used instead. A function <Math>F: a,b \mapsto bool</Math> is expected here. The output has to be
true or false. Fail is not allowed in this context.
 </Description>
</ManSection>


</Section>



<Section Label="Chapter_Objects_Section_Well-Definedness_of_Objects">
<Heading>Well-Definedness of Objects</Heading>

<ManSection>
  <Oper Arg="a" Name="IsWellDefinedForObjects" Label="for IsCapCategoryObject"/>
 <Returns>a boolean
</Returns>
 <Description>
The argument is an object <Math>a</Math>.
The output is <C>true</C> if <Math>a</Math> is well-defined,
otherwise the output is <C>false</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="C, F" Name="AddIsWellDefinedForObjects" Label="for IsCapCategory, IsFunction"/>
 <Returns>nothing
</Returns>
 <Description>
The arguments are a category <Math>C</Math> and a function <Math>F</Math>.
This operations adds the given function <Math>F</Math>
to the category for the basic operation <C>IsWellDefinedForObjects</C>.
<Math>F: a \mapsto \mathtt{IsWellDefinedForObjects}( a )</Math>.
 </Description>
</ManSection>


</Section>


</Chapter>

