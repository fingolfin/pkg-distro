<!-- ------------------------------------------------------------------- -->
<!--                                                                     -->
<!--  gp2ind.xml            XMod documentation            Chris Wensley  -->
<!--                                                        & Murat Alp  -->
<!--  Copyright (C) 2001-2016, Chris Wensley et al,                      --> 
<!--  School of Computer Science, Bangor University, U.K.                --> 
<!--                                                                     -->
<!-- ------------------------------------------------------------------- -->

<?xml version="1.0" encoding="UTF-8"?>

<Chapter Label="chap-gp2ind">
<Heading>Induced constructions</Heading>

<Section><Heading>Induced crossed modules</Heading>
<Index>induced crossed module</Index>

<ManSection>
   <Func Name="InducedXMod"
         Arg="args" />
   <Func Name="InducedCat1"
         Arg="args" />
   <Prop Name="IsInducedXMod"
         Arg="xmod" />
   <Attr Name="MorphismOfInducedXMod"
         Arg="xmod" />
<Description>
A morphism of crossed modules
<M>(\sigma, \rho) : {\cal X}_1 \to {\cal X}_2</M>
factors uniquely through an induced crossed module
<M>\rho_{\ast} {\cal X}_1 = (\delta  :  \rho_{\ast} S_1 \to R_2)</M>.
Similarly, a morphism of cat1-groups factors through an induced cat1-group.
Calculation of induced crossed modules of <M>{\cal X}</M> also
provides an algebraic means of determining the homotopy <M>2</M>-type
of homotopy pushouts of the classifying space of <M>{\cal X}</M>.
For more background from algebraic topology see references in
<Cite Key="BH1" />, <Cite Key="BW1" />, <Cite Key="BW2" />.
Induced crossed modules and induced cat1-groups also provide the
building blocks for constructing pushouts in the categories
<E>XMod</E> and <E>Cat1</E>.
<P/>
Data for the cases of algebraic interest is provided by a conjugation
crossed module  <M>{\cal X} = (\partial  :  S \to R)</M>
and a homomorphism  <M>\iota</M>  from  <M>R</M>  to a third group  <M>Q</M>.
The output from the calculation is a crossed module
<M>\iota_{\ast}{\cal X} = (\delta  :  \iota_{\ast}S \to Q)</M>
together with a morphism of crossed modules
<M>{\cal X} \to \iota_{\ast}{\cal X}</M>.
When <M>\iota</M> is a surjection with kernel <M>K</M> then
<M>\iota_{\ast}S = [S,K]</M> (see <Cite Key="BH1" />).
When <M>\iota</M> is an inclusion the induced crossed module may be
calculated using a copower construction <Cite Key="BW1" /> or,
in the case when <M>R</M> is normal in <M>Q</M>, 
as a coproduct of crossed modules 
(<Cite Key="BW2" />, but not yet implemented).
When <M>\iota</M> is neither a surjection nor an inclusion, <M>\iota</M>
is factored as the composite of the surjection onto the image
and the inclusion of the image in <M>Q</M>, and then the composite induced
crossed module is constructed.
These constructions use Tietze transformation routines in 
the library file <C>tietze.gi</C>.
<P/>
As a first, surjective example, we take for <M>{\cal X}</M> 
the normal inclusion crossed module of <C>a4</C> in <C>s4</C>,
and for <M>\iota</M> the surjection from <C>s4</C> to <C>s3</C> 
with kernel <C>k4</C>.  
The induced crossed module is isomorphic to <C>X3</C>.
</Description>
</ManSection>
<P/>
<Example>
<![CDATA[
gap> s4gens := GeneratorsOfGroup( s4 );
[ (1,2), (2,3), (3,4) ]
gap> a4gens := GeneratorsOfGroup( a4 );
[ (1,2,3), (2,3,4) ]
gap> s3b := Group( (5,6),(6,7) );;  SetName( s3b, "s3b" );
gap> epi := GroupHomomorphismByImages( s4, s3b, s4gens, [(5,6),(6,7),(5,6)] );;
gap> X4 := XModByNormalSubgroup( s4, a4 );;
gap> indX4 := SurjectiveInducedXMod( X4, epi );
[a4/ker->s3b]
gap> Display( indX4 );

Crossed module [a4/ker->s3b] :- 
: Source group a4/ker has generators:
  [ (1,3,2), (1,2,3) ]
: Range group s3b has generators:
  [ (5,6), (6,7) ]
: Boundary homomorphism maps source generators to:
  [ (5,6,7), (5,7,6) ]
: Action homomorphism maps range generators to automorphisms:
  (5,6) --> { source gens --> [ (1,2,3), (1,3,2) ] }
  (6,7) --> { source gens --> [ (1,2,3), (1,3,2) ] }
  These 2 automorphisms generate the group of automorphisms.

gap> morX4 := MorphismOfInducedXMod( indX4 );
[[a4->s4] => [a4/ker->s3b]]
]]>
</Example>

For a second, injective example we take for <M>{\cal X}</M> 
a conjugation crossed module. 
<P/>
<Example>
<![CDATA[
gap> d8 := Subgroup( d16, [ b1^2, b2 ] );  SetName( d8, "d8" ); 
Group([ (11,13,15,17)(12,14,16,18), (12,18)(13,17)(14,16) ])
gap> c4 := Subgroup( d8, [ b1^2 ] );  SetName( c4, "c4" ); 
Group([ (11,13,15,17)(12,14,16,18) ])
gap> Y16 := XModByNormalSubgroup( d16, d8 );                   
[d8->d16]
gap> Y8 := SubXMod( Y16, c4, d8 );            
[c4->d8]
gap> inc8 := InclusionMorphism2dDomains( Y16, Y8 ); 
[[c4->d8] => [d8->d16]]
gap> incd8 := RangeHom( inc8 );;
gap> indY8 := InducedXMod( Y8, incd8 );
#I induced group has Size: 16
#I factor 2 is abelian  with invariants: [ 4, 4 ]
i*([c4->d8])
gap> morY8 := MorphismOfInducedXMod( indY8 );
[[c4->d8] => i*([c4->d8])]
]]>
</Example>

For a third example we take the identity mapping on <C>s3c</C> as boundary,
and the inclusion of <C>s3c</C> in <C>s4</C> as <M>\iota</M>.
The induced group is a general linear group <C>GL(2,3)</C>.
<P/>
<Example>
<![CDATA[
gap> s3c := Subgroup( s4, [ (2,3), (3,4) ] );;  
gap> SetName( s3c, "s3c" );
gap> indXs3c := InducedXMod( s4, s3c, s3c );
#I induced group has Size: 48
i*([s3c->s3c])
gap> StructureDescription( indXs3c );
[ "GL(2,3)", "S4" ]
]]>
</Example>

<ManSection>
   <Oper Name="AllInducedXMods"
         Arg="Q" />
<Description>
This function calculates all the induced crossed modules 
<C>InducedXMod( Q, P, M )</C>, 
where <C>P</C> runs over all conjugacy classes of subgroups of <C>Q</C> 
and <C>M</C> runs over all non-trivial subgroups of <C>P</C>.
</Description>
</ManSection>

</Section>

</Chapter>
